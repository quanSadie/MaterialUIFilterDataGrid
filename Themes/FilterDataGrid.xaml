<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:FilterDataGrid"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <md:BundledTheme BaseTheme="Light"
                          PrimaryColor="Blue"
                          SecondaryColor="Blue" />
        <ResourceDictionary Source="/MaterialFilterGrid;component/Themes/Icons.xaml" />
        <ResourceDictionary Source="/MaterialFilterGrid;component/Themes/MaterialDesignStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  STRING FORMAT CONVERTER  -->
    <control:StringFormatConverter x:Key="StringFormatConverter" />

    <!--  INITIAL POPUP SIZE  -->
    <sys:Double x:Key="PopupHeight">420</sys:Double>
    <sys:Double x:Key="PopupWidth">262</sys:Double>
    <sys:Boolean x:Key="StayOpen">False</sys:Boolean>

    <!--  PLACEHOLDER SEARCH BOX  -->
    <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialSearchBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <!-- Main TextBox -->
                        <TextBox x:Name="TextSource"
                            Background="Transparent"
                            BorderThickness="0"
                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialSearchBox}">
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <!-- Placeholder TextBox -->
                        <TextBox x:Name="TextBoxPlaceHolder"
                            Text="{TemplateBinding Tag}"
                            Background="Transparent"
                            BorderThickness="0"
                            IsHitTestVisible="False">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Padding" Value="{Binding Padding, ElementName=TextSource}"/>
                                    <Setter Property="Margin" Value="{Binding Margin, ElementName=TextSource}"/>
                                    <Setter Property="FontSize" Value="{Binding FontSize, ElementName=TextSource}"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Text, ElementName=TextSource}" Value=""/>
                                                <Condition Binding="{Binding IsFocused, ElementName=TextSource}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  EXTERNAL ACCESS DEFAULT STYLE AND CONTROLTEMPLATE FOR DATAGRID  -->
    <Style x:Key="{ComponentResourceKey {x:Type control:FilterDataGrid}, FilterDataGridStyle}" BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type control:FilterDataGrid}">

        <!--  DISABLING CanUserAddRows :  AggregateException when user can add row  -->
        <Setter Property="CanUserAddRows" Value="False" />

        <!--  ROWS COUNT TEMPLATE  -->
        <Setter Property="RowHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Center">
                        <!--
                            SET THE WIDTH OF THE ROW HEADER : auto-adjust row header width to largest number of items (Items.Count).
                        -->
                        <TextBlock Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=RowHeaderSize, UpdateSourceTrigger=PropertyChanged}" Panel.ZIndex="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}" />

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!--  DATAGRID TEMPLATE  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border
                        x:Name="DatagridBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  CONTENT DATAGRID  -->
                            <ScrollViewer
                                x:Name="DG_ScrollViewer" Grid.Row="0"
                                CanContentScroll="True" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent" ShowGridLines="False">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Button
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter
                                                x:Name="PART_ColumnHeadersPresenter" Grid.Row="0"
                                                Grid.Column="1"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter
                                                x:Name="PART_ScrollContentPresenter" Grid.Row="1"
                                                Grid.Column="0" Grid.ColumnSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar
                                                x:Name="PART_VerticalScrollBar" Grid.Row="1"
                                                Grid.Column="2"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Orientation="Vertical"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                            <!--  STATUS BAR & RESULT FILTER  -->
                            <Border
                                x:Name="BorderStatusBar" Grid.Row="1"
                                Padding="4,2" Background="Transparent"
                                BorderBrush="LightGray" BorderThickness="0,1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ShowStatusBar, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <UniformGrid Columns="2" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">

                                    <!--  RESULT STATUS  -->
                                    <TextBlock HorizontalAlignment="Left">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="Culture">
                                                <Binding Path="Translate.Status" />
                                                <Binding Path="Items.Count" UpdateSourceTrigger="PropertyChanged" />
                                                <Binding Path="ItemsSourceCount" />
                                                <Binding Path="Translate.Culture" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                    <!--  ELAPSED TIME  -->
                                    <TextBlock HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="Culture">
                                                <Binding Path="Translate.ElapsedTime" UpdateSourceTrigger="PropertyChanged" />
                                                <Binding Path="ElapsedTime" />
                                                <Binding Path="Translate.Culture" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ShowElapsedTime}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </UniformGrid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  DATAGRIDCOLUMNHEADER STYLE  -->
    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="AliceBlue" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Sort Arrow -->
                                <md:PackIcon x:Name="SortArrow"
                                       Grid.Column="0"
                                       Kind="ArrowUp"
                                       Width="16"
                                       Height="16"
                                       Margin="0,0,4,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       Opacity="0.67"
                                       Visibility="Collapsed"/>

                                <!-- Content -->
                                <ContentPresenter Grid.Column="1"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>

                        <!-- Resize Grip -->
                        <Thumb x:Name="PART_RightHeaderGripper" 
                           HorizontalAlignment="Right" 
                           Width="2"
                           Cursor="SizeWE"
                           Style="{StaticResource MaterialDesignGridColumnHeaderGripper}">
                            <Thumb.Template>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="Transparent" Width="5">
                                        <Rectangle HorizontalAlignment="Center"
                                             Width="1"
                                             Fill="#FFD4D4D4"
                                             Opacity="0.7"/>
                                    </Border>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Kind" Value="ArrowUp"/>
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Kind" Value="ArrowDown"/>
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FILTER BUTTON CONTROLTEMPLATE  -->
    <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
        <!-- Outer Grid for clickable area -->
        <Grid Background="Transparent">
            <!-- Transparent background for larger click area -->
            <!-- Center content -->
            <Grid Width="24" Height="24" 
              HorizontalAlignment="Center" 
              VerticalAlignment="Center">
                <md:PackIcon x:Name="FilterIcon"
                        Kind="Filter"
                        Width="20"
                        Height="20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{TemplateBinding Foreground}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="control:FilterState.IsFiltered" Value="True">
                <Setter TargetName="FilterIcon" Property="Kind" Value="FilterCheck"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="control:FilterState.IsFiltered" Value="False">
                <Setter TargetName="FilterIcon" Property="Kind" Value="Filter"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
                <Setter Property="Opacity" Value="0.75"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignRipple}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  DATATEMPLATE OF DATAGRIDCOLUMNHEADER  -->
    <DataTemplate x:Key="DataGridHeaderTemplate">

        <!--  HEADER STRECH TO CONTENTPRESENTER OF DATAGRIDCOLUMNHEADER  -->
        <Grid
            x:Name="ContainerFilterGrid"
            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}, Mode=FindAncestor, AncestorLevel=1}, Path=ActualWidth}"
            HorizontalAlignment="Stretch" Background="Transparent">

            <!--  HEADER/BUTTON  -->
            <Grid x:Name="GridHeaderButton" ShowGridLines="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  RENDER THE HEADER TEXT  -->
                <TextBlock Grid.Column="0" Text="{Binding}" />

                <!--
                    FILTER BUTTON
                    FilterState.IsFiltered => Attached Property : see FilterHelpers.cs
                -->
                <Button Name="FilterButton" 
                    Grid.Column="1"
                    Width="24"      
                    Height="24"
                    Padding="4"
                    Margin="4,0,2,0"
                    control:FilterState.IsFiltered="False"
                    Command="{x:Static control:FilterDataGrid.ShowFilter}"
                    Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialFilterButton}">
                            <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <!--  POPUP  -->
            <Popup
                Name="FilterPopup"
                IsOpen="False"
                PlacementTarget="{Binding ElementName=ContainerFilterGrid}"
                StaysOpen="{StaticResource StayOpen}">

                <Border x:Name="PopUpBorder"
                    Style="{StaticResource MaterialFilterPopup}">

                    <Grid
                        x:Name="SizableContentGrid"
                        MinWidth="{StaticResource PopupWidth}"
                        MinHeight="{StaticResource PopupHeight}"                        
                        ShowGridLines="False" ZIndex="1">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="32" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Row 0: BUTTON CLEAR FILTER  -->
                        <Button x:Name="ClearFilterBnt" 
                            Grid.Row="0"
                            Grid.Column="0" 
                            Grid.ColumnSpan="2"
                            Margin="2,10,2,2" 
                            Padding="8,4"
                            HorizontalAlignment="Stretch"
                            Command="{x:Static control:FilterDataGrid.RemoveFilter}"
                            Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridColumnHeader}}, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="13" 
                            TabIndex="0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="BorderContent"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <!-- Filter Delete Icon -->
                                                        <md:PackIcon Grid.Column="0"
                                                            Kind="FilterRemove"
                                                            Width="18" 
                                                            Height="18"
                                                            Margin="0,0,8,0"
                                                            Opacity="0.87"
                                                            VerticalAlignment="Center"
                                                            Foreground="{TemplateBinding Foreground}" />

                                                        <!-- Clear Text -->
                                                        <TextBlock Grid.Column="1"
                                                            VerticalAlignment="Center"
                                                            TextTrimming="CharacterEllipsis">
                                                            <TextBlock.Text>
                                                                <MultiBinding Converter="{StaticResource StringFormatConverter}" 
                                                                        ConverterParameter="Culture">
                                                                    <Binding Path="Translate.Clear" 
                                                                        RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                                    <Binding ElementName="ClearFilterBnt" 
                                                                        Path="Content" />
                                                                    <Binding Path="Translate.Culture" 
                                                                        RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderContent" 
                                                            Property="Background" 
                                                            Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="BorderContent" 
                                                            Property="Background" 
                                                            Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.38" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--  Row 1: SEPARATOR  -->
                        <Separator Grid.Row="1" 
                            Grid.Column="1"
                            Margin="0,2" 
                            Style="{StaticResource MaterialDesignLightSeparator}" />

                        <!--  Row 2: SEARCH BOX  -->
                        <Border Grid.Row="2" 
                            Grid.Column="1"
                            Margin="0,4,4,2" 
                            Padding="0,2"
                            VerticalAlignment="Top" 
                            Background="Transparent"
                            BorderBrush="{DynamicResource MaterialDesignDivider}"
                            BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBox x:Name="SearchBox" 
                                    Grid.Column="0"
                                    Margin="0" 
                                    Padding="8,4"
                                    HorizontalAlignment="Stretch" 
                                    VerticalContentAlignment="Center"
                                    AcceptsReturn="False"
                                    Style="{StaticResource PlaceHolder}"
                                    FontSize="13"
                                    MaxLength="20"
                                    TabIndex="1"
                                    Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=Translate.Contains}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" 
                                        Command="{x:Static control:FilterDataGrid.ApplyFilter}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Grid>
                        </Border>

                        <!--  Row 3: ICON (filter is active)  -->
                        <md:PackIcon Grid.Row="3"
                            Grid.Column="0"
                            Width="20"
                            Height="20"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            Panel.ZIndex="0"
                            Kind="FilterCheck"
                            Foreground="{DynamicResource MaterialDesignBody}"
                            Opacity="0.87">
                            <md:PackIcon.Style>
                                <Style TargetType="md:PackIcon">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ClearFilterBnt, Path=IsEnabled}" 
                                            Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PackIcon.Style>
                        </md:PackIcon>

                        <!--  Row 3: (LISTBOX/TREEVIEW)  -->
                        <Grid
                            x:Name="GridItemControl" Grid.Row="3"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                            Grid.Column="1" Margin="0,4,4,4">

                            <ListBox
                                x:Name="PopupListBox" Grid.Row="0"
                                Padding="2" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" 
                                control:ScrollToTopBehavior.ScrollToTop="True"
                                BorderBrush="LightGray"
                                ItemsSource="{Binding ListBoxItems, UpdateSourceTrigger=PropertyChanged}"
                                BorderThickness="1" 
                                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                ScrollViewer.VerticalScrollBarVisibility="Auto" TabIndex="2">
                                <ListBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type control:FilterItem}">
                                        <CheckBox
                                            Style="{StaticResource MaterialDesignCheckBox}"
                                            x:Name="CheckBox" Width="Auto"
                                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                            Command="{x:Static control:FilterDataGrid.IsChecked}"
                                            CommandParameter="{Binding}"
                                            FontWeight="Normal"
                                            IsChecked="{Binding IsChecked}"
                                            IsThreeState="False">
                                            <CheckBox.Content>
                                                <MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="Culture">
                                                    <Binding Path="Translate.Neutral" RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                    <Binding Path="Label" />
                                                    <Binding Path="Translate.Culture" RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                </MultiBinding>
                                            </CheckBox.Content>
                                        </CheckBox>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Level}" Value="1">
                                                <Setter TargetName="CheckBox" Property="Margin" Value="4,0,0,0" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.Style>
                                    <Style TargetType="ListBox" BasedOn="{StaticResource MaterialFilterListBox}"/>
                                </ListBox.Style>
                            </ListBox>

                            <TreeView
                                x:Name="PopupTreeview" Grid.Row="0"
                                BorderBrush="LightGray" BorderThickness="1"
                                control:ScrollToTopBehavior.ScrollToTop="True"
                                ItemsSource="{Binding TreeviewItems, UpdateSourceTrigger=PropertyChanged}"
                                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                ScrollViewer.VerticalScrollBarVisibility="Auto" TabIndex="2">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="control:FilterItemDate" ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox
                                                x:Name="CheckBoxTree" VerticalAlignment="Center"
                                                Focusable="False"
                                                Style="{StaticResource MaterialDesignCheckBox}"
                                                IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            <ContentPresenter Margin="2" Content="{Binding Label}" />
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Level}" Value="1">
                                                <Setter TargetName="CheckBoxTree" Property="Margin" Value="4,0,0,0" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                                <TreeView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="IsExpanded" Value="False" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="Visibility" Value="Visible" />
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Style>
                                    <Style TargetType="TreeView" BasedOn="{StaticResource MaterialFilterTreeView}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TreeviewItems.Count, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Style>
                            </TreeView>
                        </Grid>

                        <!--  Row 4: OK/CANCEL BUTTON  -->
                        <UniformGrid
                            Grid.Row="4" Grid.Column="1"
                            Margin="0,6,4,6" HorizontalAlignment="Right"
                            Background="Transparent" Columns="2"
                            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">

                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                Command="{x:Static control:FilterDataGrid.ApplyFilter}"
                                Content="{Binding Translate.Ok}"/>

                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                Command="{x:Static control:FilterDataGrid.CancelFilter}"
                                Content="{Binding Translate.Cancel}"/>
                        </UniformGrid>

                        <!--  Row 5: RESIZE GRIP  -->
                        <Thumb
                            x:Name="PopupThumb" Grid.Row="5"
                            Grid.Column="0" Grid.ColumnSpan="2"
                            Width="20" Height="Auto"
                            Margin="0,0,2,2" HorizontalAlignment="Right"
                            VerticalAlignment="Bottom" SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Style.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid
                                                        x:Name="resizeVisual" HorizontalAlignment="Right"
                                                        VerticalAlignment="Bottom" Background="Transparent"
                                                        DockPanel.Dock="Right" SnapsToDevicePixels="True"
                                                        UseLayoutRounding="True">
                                                        <Path
                                                            Width="12" Height="12"
                                                            Margin="0"
                                                            Data="{DynamicResource GripSizeIcon}"
                                                            Stretch="None" Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=Foreground}"
                                                            Opacity="0.5"
                                                            StrokeThickness="1" />
                                                        <Grid.Style>
                                                            <Style TargetType="{x:Type Grid}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Cursor" Value="SizeNWSE" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
